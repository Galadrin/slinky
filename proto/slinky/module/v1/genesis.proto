syntax = "proto3";

option go_package = "github.com/skip-mev/slinky/x/oracle/types";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";

// Ticker is the standard representation of a pair of assets, where one (Asset1)
// is priced in terms of the other (Asset2)
message Ticker {
  string Asset1 = 1;
  string Asset2 = 2;
}

// TickerPrice is the representation of a SpotPrice for a Ticker, where price
// represents the price of Asset1 in terms of Asset2
message TickerPrice {
  string price = 1 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  google.protobuf.Timestamp timestamp = 2
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
}

// TickerGenesis is the information necessary for initialization of a Ticker,
// both a Ticker + TickerPrice object is required
message TickerGenesis {
  Ticker ticker = 1;
  TickerPrice ticker_price = 2 [ (gogoproto.nullable) = true ];
}

// GenesisState is the genesis-state for the x/oracle module, it takes a set of
// predefined Tickers + prices
message GenesisState { repeated TickerGenesis ticker_genesis = 1; }
